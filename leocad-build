#!/bin/bash

# Author: Nathanel Titane - nathanel.titane@gmail.com

# leocad build #

# script --------------------------------------------------------------------- #

script=$(basename -- "${BASH_SOURCE[0]}")

# version -------------------------------------------------------------------- #

version="06-01-2020"

# variables ------------------------------------------------------------------ #

print_architecture="$(dpkg --print-architecture)"

source="https://github.com/leozide/leocad.git"

binary_directory="/usr/bin"

home="/home/${SUDO_USER:-$USER}"
configuration_directory="$home/.config"
local_applications_directory="$home/.local/share/applications"
system_applications_directory="/usr/share/applications"

ldraw_directory="/media/MEGA/Lego"
ldraw_parts_directory="/media/MEGA/Lego/ldraw/"

# defaults ------------------------------------------------------------------- #

option=qt5

# usage ---------------------------------------------------------------------- #

while (($#))
do
	case "$1" in
		-4|--qt4)
			option=qt4
			;;
		-5|--qt5)
			option=qt5
			;;
		-h|--help)
			echo -e "Usage:"
			echo -e "./$script [OPTION]"
			echo -e "Utility options:"
			echo -e "-4, --qt4 \t Builds application using Qt4 libraries."
			echo -e "-5, --qt5 \t Builds application using Qt5 libraries."
			echo -e ""
			echo -e "-h, --help \t\t Show help options."
			echo -e "-v, --version \t\t Print version."
			exit
			;;
		-v|--version)
			echo -e "$script $version"
			exit
			;;
		*)
			echo -e ""
			echo -e "$script: Unknown option $1"
			echo -e "Defaulting to option $option"
			echo -e "Try '$script --help' for options information."
			echo -e ""
			;;
		esac
	shift
done

# functions ------------------------------------------------------------------ #

console.spinner () {
	# catch PID of last command

	PID=$!

	# spinner string content

	before="[ "
	spinner="/â€”\|"
	after="]"
	message="$1"

	i=1

	echo

	while [ -d /proc/$PID ]
	do
		echo -ne "\r${before} \b${spinner:i++%${#spinner}:1} ${after} ${message}\c "
		sleep 0.125
	done

	echo
}

# dependencies --------------------------------------------------------------- #

binaries_list=(
	console
)

if [[ "$(which $binary)" == "" ]]
then

	for binary in ${binaries_list[@]}
	do
		binary_url=bin-dex.ntttn.me/"$binary"

		# get binaries from repository

		curl -sL ${binary_url} > "$binary_directory/$binary" &

		console.spinner "Downloading binary [ $binary ]."
		echo

		# set execution mode for binary

		chmod +x "$binary_directory/$binary"
	done

	source "$binary_directory/$binary"
fi

# initial prompt clear ------------------------------------------------------- #

clear

# install -------------------------------------------------------------------- #

console.info "Installing required packages."
echo

install_list=(
	git
	g++
	make
	zlib1g-dev
)

if [[ "$option" == "qt4" ]]
then
	# qt4 packages and libraries

	install_list+=(
		qt4-default
	)
fi

if [[ "$option" == "qt5" ]]
then
	# qt5 packages and libraries

	install_list+=(
		libqt5opengl5
		libqt5printsupport5
		libqt5xml5
		libqt5concurrent5
		qttools5-dev-tools
		qt5-default
	)
fi

# install -------------------------------------------------------------------- #

for package in ${install_list[@]}
do
	if [[ $(command -v ${package}) = "" ]]
	then
		console.warning "Required package '${package}' not present."
		echo
		console.fwd "Installing..."
		echo

		echo yes | apt install ${package}
		echo
	else
		console.success "Required package '${package}' already installed."
		echo
		console.fwd "Continuing..."
		echo

		:
	fi
done

# make temporary directory

directory=$(mktemp -d)
trap 'rm -rf "$directory"' EXIT

cd "$directory" || exit 1

git clone "$source" "$directory"

# build

qmake leocad.pro

make -s &

console.spinner "Building..."
echo

cd "$directory"/build/release || exit 1

console.info "Copying updated binary."
echo

if [[ "$(which leocad)" != "" ]]
then
	rm -rf "$(which leocad)"
fi

cp "$directory"/build/release/leocad  "$binary_directory"/leocad

# launcher ------------------------------------------------------------------- #

console.info "Writing launcher."
echo

cat <<- FILE > "$system_applications_directory"/leocad.desktop
[Desktop Entry]
Encoding=UTF-8
Name=LeoCAD
GenericName=LDraw Model Editor
Comment=LDraw Model Editor
FILE

if [[ "$print_architecture" = "arm64" ]]
then
	cat <<- FILE >> "$system_applications_directory"/leocad.desktop
	Exec=env LD_PRELOAD=/lib/libandroid-shmem-aarch64.so /usr/bin/leocad
	FILE
else
	cat <<- FILE >> "$system_applications_directory"/leocad.desktop
	Exec=/usr/bin/leocad
	FILE
fi

cat <<- FILE >> "$system_applications_directory"/leocad.desktop
Icon=leocad
Terminal=false
Type=Application
MimeType=application/x-ldraw;application/x-multipart-ldraw;
Categories=Graphics;2DGraphics;3DGraphics;Editor;
FILE

chmod +x "$system_applications_directory"/leocad.desktop

# configuration -------------------------------------------------------------- #

if [ ! -d "$configuration_directory/LeoCAD Software" ]
then
	mkdir -p "$configuration_directory/LeoCAD Software"
fi

cd "$configuration_directory/LeoCAD Software" || exit 1

console.info "Writing configuration."
echo

ln -s -f /media/Internal/MEGA/Lego/leocad/leocad.conf "$configuration_directory/LeoCAD Software/LeoCAD.conf"

# complete ------------------------------------------------------------------- #

console.success "Done."
echo
